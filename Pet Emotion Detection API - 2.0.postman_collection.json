{
	"info": {
		"_postman_id": "8c9e4ad6-71f1-440c-adcc-0222f944b53f",
		"name": "Pet Emotion Detection API - 2.0",
		"description": "Django + Firebase backend API for pet emotion detection with OAuth support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29726162",
		"_collection_link": "https://mh-boys.postman.co/workspace/0b86400d-f41b-4111-85df-e599a39fd7ca/collection/29726162-8c9e4ad6-71f1-440c-adcc-0222f944b53f?action=share&source=collection_link&creator=29726162"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Phone Registration Flow",
					"item": [
						{
							"name": "Auth - Register (Start)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.phoneNumber) { pm.environment.set('phoneNumber', json.phoneNumber); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"number\": \"+15551234567\",\n  \"password\": \"secret123\",\n  \"confirmPassword\": \"secret123\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Verify OTP and Complete Registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.uid) { pm.environment.set('uid', json.uid); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phoneNumber\": \"{{phoneNumber}}\",\n  \"code\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/verify-otp-and-register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"verify-otp-and-register"
									]
								}
							},
							"response": []
						},
						{
							"name": "OTP Status",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "OAuth Authentication",
					"item": [
						{
							"name": "Google Sign-In",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.uid) { pm.environment.set('uid', json.uid); }",
											"console.log('Is new user:', json.isNewUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idToken\": \"GOOGLE_ID_TOKEN_FROM_MOBILE_SDK\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@gmail.com\",\n  \"phoneNumber\": \"+15551234567\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/google-signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"google-signin"
									]
								}
							},
							"response": []
						},
						{
							"name": "Apple Sign-In",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.uid) { pm.environment.set('uid', json.uid); }",
											"console.log('Is new user:', json.isNewUser);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identityToken\": \"APPLE_IDENTITY_TOKEN_FROM_MOBILE_SDK\",\n  \"authorizationCode\": \"APPLE_AUTH_CODE\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@privaterelay.appleid.com\",\n  \"phoneNumber\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/apple-signin",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"apple-signin"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Legacy Authentication",
					"item": [
						{
							"name": "Auth - Send OTP (Legacy)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uid\": \"{{uid}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/send-otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"send-otp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Verify OTP (Legacy)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"uid\": \"{{uid}}\",\n  \"code\": \"123456\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/verify-otp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"verify-otp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth - Firebase Login (REST) → Set idToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.idToken) { pm.environment.set('idToken', json.idToken); }",
											"if (json.localId) { pm.environment.set('uid', json.localId); }"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"secret123\",\n  \"returnSecureToken\": true\n}"
								},
								"url": {
									"raw": "https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={{webApiKey}}",
									"protocol": "https",
									"host": [
										"identitytoolkit",
										"googleapis",
										"com"
									],
									"path": [
										"v1",
										"accounts:signInWithPassword"
									],
									"query": [
										{
											"key": "key",
											"value": "{{webApiKey}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Auth - Verify Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"idToken\": \"{{idToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth - Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john@example.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth - Login (Guidance/Test Firebase SDK)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"secret123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth - Change Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john@example.com\",\n  \"currentPassword\": \"old12345\",\n  \"newPassword\": \"new12345\",\n  \"confirmPassword\": \"new12345\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"change-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SMS Service",
			"item": [
				{
					"name": "SMS - Check Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/sms-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"sms-config"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMS - Account Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sms/account-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sms",
								"account-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMS - Verify Phone Number",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phone_number\": \"+12402915041\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/sms/verify-phone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sms",
								"verify-phone"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMS - Check Message Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/sms/message-status/{{messageSid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"sms",
								"message-status",
								"{{messageSid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"number\": \"+15551234567\",\n  \"location\": \"New York\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pet Management",
			"item": [
				{
					"name": "List Pets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = {};",
									"try { json = pm.response.json(); } catch(e) {}",
									"if (json.id) { pm.environment.set('petId', json.id); }"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Buddy\",\n  \"gender\": \"male\",\n  \"species\": \"dog\",\n  \"breed\": \"Labrador\",\n  \"dateOfBirth\": \"2020-05-01\",\n  \"photoUrl\": \"https://example.com/photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pet by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"breed\": \"Golden Retriever\",\n  \"photoUrl\": \"https://example.com/new-photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Pet (PUT)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Buddy Updated\",\n  \"gender\": \"male\",\n  \"species\": \"dog\",\n  \"breed\": \"Golden Retriever\",\n  \"dateOfBirth\": \"2020-05-01\",\n  \"photoUrl\": \"https://example.com/photo.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Pet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/pets/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Emotion Detection",
			"item": [
				{
					"name": "Upload Image for Emotion Scan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let json = {};",
									"try { json = pm.response.json(); } catch(e) {}",
									"console.log('Detected emotion:', json.emotion);",
									"console.log('Confidence:', json.confidence);",
									"console.log('Media URL:', json.mediaUrl);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "petId",
									"value": "{{petId}}",
									"type": "text"
								},
								{
									"key": "mediaType",
									"value": "image",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/scans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"scans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Audio for Emotion Scan",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "petId",
									"value": "{{petId}}",
									"type": "text"
								},
								{
									"key": "mediaType",
									"value": "audio",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/scans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"scans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scan History (All)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/history",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scan History (Filtered by Pet)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/history?petId={{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"history"
							],
							"query": [
								{
									"key": "petId",
									"value": "{{petId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Admin Analytics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{idToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"analytics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Storage Config",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/storage-config",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"storage-config"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Swagger Documentation",
			"item": [
				{
					"name": "Swagger UI",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/swagger/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"swagger",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "ReDoc Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/redoc/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"redoc",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "OpenAPI Schema (JSON)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/swagger.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"swagger.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "OpenAPI Schema (YAML)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/swagger.yaml",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"swagger.yaml"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Community",
			"item": [
				{
					"name": "Posts",
					"item": [
						{
							"name": "Get All Posts (Community Feed)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/posts?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get My Posts",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/my?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"my"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Post (Text Only)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.id) { pm.environment.set('postId', json.id); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Check out my adorable pet! 🐕\",\n  \"tags\": [\"pets\", \"cute\", \"community\"],\n  \"isPublic\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Post (With Images)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.id) { pm.environment.set('postId', json.id); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "My pet's emotion detection results! 📸",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "[\"emotion\", \"detection\", \"pet\"]",
											"type": "text"
										},
										{
											"key": "isPublic",
											"value": "true",
											"type": "text"
										},
										{
											"key": "images",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Post by ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"{{postId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Post",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/{{postId}}/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"{{postId}}",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Likes",
					"item": [
						{
							"name": "Like/Unlike Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/{{postId}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"{{postId}}",
										"like"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Get Post Comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json && json.length > 0 && json[0].id) { pm.environment.set('commentId', json[0].id); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/{{postId}}/comments?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"{{postId}}",
										"comments"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.id) { pm.environment.set('commentId', json.id); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"postId\": \"{{postId}}\",\n  \"content\": \"What a cute pet! Love this! ❤️\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/community/comments/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"comments",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Comment",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/community/comments/{{postId}}/{{commentId}}/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"comments",
										"{{postId}}",
										"{{commentId}}",
										"delete"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Sharing",
					"item": [
						{
							"name": "Share Post",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"message\": \"Check out this amazing pet post!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/community/posts/{{postId}}/share",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"community",
										"posts",
										"{{postId}}",
										"share"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Support",
			"item": [
				{
					"name": "User Support",
					"item": [
						{
							"name": "Send Support Message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.supportId) { pm.environment.set('supportId', json.supportId); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"details\": \"The app is crashing when I try to upload images for emotion detection. This happens every time I select an image from my gallery. Please help me fix this issue.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/support/send",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"support",
										"send"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Support Message (Authenticated)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let json = {};",
											"try { json = pm.response.json(); } catch(e) {}",
											"if (json.supportId) { pm.environment.set('supportId', json.supportId); }"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"user@example.com\",\n  \"details\": \"I would like to request a new feature: the ability to save multiple pets and switch between them. Currently I can only have one pet profile but I have multiple pets at home.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/support/send",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"support",
										"send"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get My Support Messages",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/support/my?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"support",
										"my"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Admin Support Management",
					"item": [
						{
							"name": "Get All Support Messages (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/support/messages?limit=50&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"support",
										"messages"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get New Support Messages (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/support/messages?status=new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"support",
										"messages"
									],
									"query": [
										{
											"key": "status",
											"value": "new"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark Support Message as Read (Admin)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/support/messages/{{supportId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"support",
										"messages",
										"{{supportId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reply to Support Message (Admin)",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"replied\",\n  \"adminReply\": \"Thank you for reporting this issue. We have identified the problem and it will be fixed in the next app update (version 1.3.0). In the meantime, please try restarting the app and clearing the cache. If the issue persists, please let us know.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/admin/support/messages/{{supportId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"support",
										"messages",
										"{{supportId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Support Analytics (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{idToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/support/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"support",
										"analytics"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "webApiKey",
			"value": "YOUR_FIREBASE_WEB_API_KEY",
			"type": "string"
		}
	]
}